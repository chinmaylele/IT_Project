package com.byteme.gdgapp;


import static com.codename1.ui.CN.*;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Display;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class Main {

    private Form current;
    private Resources theme;

    /**
     * invoked when th app is first loaded from a cold start (Not Running state).
     * 
     * @param context
     */
    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");
        
        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        //locks the display on Android to portrait. iOS lock is done in CN1 settings
        Display.getInstance().lockOrientation(true);

        // Pro only feature, uncomment if you have a pro subscription
//        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    /**
     * invoked when the app is loaded with a cold start after init(), but also every time the app is restored after its minimised.
     */
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        
        // calls the first form that will always open when opening the app 
        new Login(theme).show();
    }

    /**
     * invoked when the app is minimised. Saves the current session, moves app to a Suspended state.
     */
    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    /**
     * invoked when the app is closed, not minimised. Moves app to a Not Running state. No 
     * guarantee it will be invoked, used only as a last resort.
     */
    public void destroy() {
    }

}
